name: Test Package (reusable)

on:
  workflow_call:
    inputs:
      package:
        type: string
        description: The package to test
        required: true
      stylelint-version:
        type: string
        description: The Stylelint version to test
        required: true
      stylelint-version-override:
        type: string
        description: The Stylelint version override
      set-overrides-command:
        type: string
        description: The command to set dependency overrides
      install-command:
        type: string
        description: The install command to run
        default: 'npm install --no-audit'
      list-installed-versions-command:
        type: string
        description: The list dependencies command to run
        default: 'npm list stylelint'
      build-command:
        type: string
        description: The build command to run
        default: 'npm run build --if-present'
      test-command:
        type: string
        description: The test command to run
        default: 'npm test'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Get repo info from ${{ inputs.package }}
        id: repo-info
        env:
          PACKAGE: ${{ inputs.package }}
        run: |
          url=$(npm repo --browser=false --json "${PACKAGE}" | jq -r '.url')
          echo "URL: ${url}"
          echo "url=${url}" >> "${GITHUB_OUTPUT}"

          fullname=$(echo "${url}" | sed -E 's/.*github.com\/([^/]+\/[^/]+).*/\1/')
          echo "Fullname: ${fullname}"
          echo "fullname=${fullname}" >> "${GITHUB_OUTPUT}"

          directory=$(npm view "${PACKAGE}" 'repository.directory')
          echo "Directory: ${directory}"
          echo "directory=${directory}" >> "${GITHUB_OUTPUT}"

      - name: Checkout ${{ steps.repo-info.outputs.fullname }}
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.repo-info.outputs.fullname }}

      - name: Setup Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install latest npm
        run: |
          npm install --global npm@latest
          echo "npm: $(npm --version)"

      - name: Install pnpm
        run: |
          npm install --global pnpm
          echo "pnpm: $(pnpm --version)"

      - name: Install yarn
        run: |
          npm install --global yarn
          echo "yarn: $(yarn --version)"

      - name: Set dependency overrides
        env:
          SET_OVERRIDES_COMMAND: ${{ inputs.set-overrides-command }}
          STYLELINT_VERSION_OVERRIDE: ${{ inputs.stylelint-version-override }}
        if: ${{ inputs.set-overrides-command }}
        run: |
          if ! eval "$SET_OVERRIDES_COMMAND=$STYLELINT_VERSION_OVERRIDE"; then
            echo "::error ::Setting dependency overrides failed."
            exit 1
          fi

          npm pkg get;

      - name: Install dependencies
        working-directory: ${{ steps.repo-info.outputs.directory }}
        env:
          PACKAGE_URL: ${{ steps.repo-info.outputs.url }}
          INSTALL_COMMAND: ${{ inputs.install-command }}
        run: |
          if ! eval "$INSTALL_COMMAND"; then
            echo "::error ::The dependency installation failed. Visit ${PACKAGE_URL}"
            exit 1
          fi

      - name: Install Stylelint ${{ inputs.stylelint-version }}
        working-directory: ${{ steps.repo-info.outputs.directory }}
        if: ${{ ! inputs.set-overrides-command }}
        env:
          STYLELINT_VERSION: ${{ inputs.stylelint-version }}
          PACKAGE_URL: ${{ steps.repo-info.outputs.url }}
        run: |
          if ! npm install --no-audit --no-save "${STYLELINT_VERSION}"; then
            echo "::error ::The Stylelint (${STYLELINT_VERSION}) installation failed. Visit ${PACKAGE_URL}"
            exit 1
          fi

      - name: List installed Stylelint versions
        working-directory: ${{ steps.repo-info.outputs.directory }}
        env:
          PACKAGE_URL: ${{ steps.repo-info.outputs.url }}
          LIST_INSTALLED_VERSIONS_COMMAND: ${{ inputs.list-installed-versions-command }}
        run: |
          if ! eval "$LIST_INSTALLED_VERSIONS_COMMAND"; then
            echo "::error ::Listing dependencies failed."
            # `npm list` has a non-zero exit code when overriding dependencies
          fi

      - name: Run build
        working-directory: ${{ steps.repo-info.outputs.directory }}
        env:
          PACKAGE_URL: ${{ steps.repo-info.outputs.url }}
          BUILD_COMMAND: ${{ inputs.build-command }}
        run: |
          if ! eval "$BUILD_COMMAND"; then
            echo "::error ::The build failed. Visit ${PACKAGE_URL}"
            exit 1
          fi

      - name: Run test
        working-directory: ${{ steps.repo-info.outputs.directory }}
        env:
          PACKAGE_URL: ${{ steps.repo-info.outputs.url }}
          TEST_COMMAND: ${{ inputs.test-command }}
        run: |
          if ! eval "$TEST_COMMAND"; then
            echo "::error ::The test failed. Visit ${PACKAGE_URL}"
            exit 1
          fi
